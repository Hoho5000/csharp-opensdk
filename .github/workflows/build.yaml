name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # dotnet-version: ["2.2.103", "3.0", "3.1.x"]
        dotnet-version: ["3.1.x"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # All history
      - name: Set SDK version
        run: |
          SDK_VERSION=$(git describe --exact-match --tags HEAD || true)
          if [ -z "${SDK_VERSION}" ]; then
            GIT_REV_COUNT=$(git rev-list $(git describe --tags --abbrev=0)..HEAD --count)
            SDK_VERSION=$(echo $(git describe --tags --abbrev=0)$(if [ "${GIT_REV_COUNT}" != "0" ]; then echo .dev${GIT_REV_COUNT}; fi))
          fi
          if [ -z "${SDK_VERSION}" ]; then
            SDK_VERSION=v0.0.0.$(git rev-list --all --count)
          fi
          if [ "${SDK_VERSION:0:1}" != "v" ]; then
            >&2 echo "Git tag does not start with a 'v'!"
            exit 1;
          fi
          SDK_VERSION="${SDK_VERSION:1}"
          echo "SDK_VERSION=${SDK_VERSION}"
          echo "TP_SDK_VERSION=${SDK_VERSION}" >> $GITHUB_ENV
      - name: Set up Dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Restore dependencies
        run: |
          dotnet restore TestProject.OpenSDK.sln
      - name: Build
        run: |
          dotnet build /p:Version=${TP_SDK_VERSION} --configuration Debug --no-restore TestProject.OpenSDK.sln
      - name: Run unit-tests
        run: |
          dotnet test --verbosity normal --no-restore --filter UnitTests
